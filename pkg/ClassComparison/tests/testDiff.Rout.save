
R version 3.5.0 (2018-04-23) -- "Joy in Playing"
Copyright (C) 2018 The R Foundation for Statistical Computing
Platform: x86_64-w64-mingw32/x64 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> library(ClassComparison)
Loading required package: oompaBase
> 
> nGenes <- 1000
> nSamplesPerGroup <- 10
> nGroups <- 2
> 
> set.seed(944637)
> data <- matrix(rnorm(nGenes*nSamplesPerGroup*nGroups),
+                nrow=nGenes)
> classes <- factor(rep(c("A", "B"), each=nSamplesPerGroup))
> 
> mtt <- MultiTtest(data, classes)
> summary(mtt)
Row-by-row two-sample t-tests with 1000 rows
Positive sign indicates an increase in class: A 

Call: MultiTtest(data = data, classes = classes) 

T-statistics:
    Min.  1st Qu.   Median     Mean  3rd Qu.     Max. 
-3.25711 -0.72072 -0.01096 -0.02219  0.66601  3.30242 

P-values:
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00396 0.25717 0.50326 0.49595 0.71980 0.99873 
> 
> mw <- MultiWilcoxonTest(data, classes)
Warning messages:
1: In hist.default(wilstats, breaks = histbreaks, plot = FALSE, probability = TRUE) :
  argument 'probability' is not made use of
2: In bs(X, degree = 3L, knots = c(`33.33333%` = 93.6666666666667,  :
  some 'x' values beyond boundary knots may cause ill-conditioned bases
> summary(mw)
Call: MultiWilcoxonTest(data = data, classes = classes) 
Row-by-row Wilcoxon rank-sum tests with 1000 rows

Rank-sum statistics:
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
   67.0    95.0   105.0   104.7   114.0   141.0 

Large values indicate an increase in class: A 

With prior = 1 and alpha = 0.9 
	the upper tail contains 0 values above 155 
	the lower tail contains 0 values below 58 
> 
> mlm <- MultiLinearModel(Y ~ classes, data.frame(classes=classes), data)
> summary(mlm)
Row-by-row linear models with 1000 rows

Call: MultiLinearModel(form = Y ~ classes, clindata = data.frame(classes = classes), arraydata = data) 

F-statistics:
     Min.   1st Qu.    Median      Mean   3rd Qu.      Max. 
 0.000003  0.132789  0.466590  1.059960  1.369473 10.905953 

P-values:
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00396 0.25717 0.50326 0.49595 0.71980 0.99873 
> 
> dud <- Dudoit(data, classes, nPerm=100, verbose=FALSE)
> summary(dud)
Row-by-row two-sample t-tests with 1000 rows
Positive sign indicates an increase in class: A 

Call: Dudoit(data = data, classes = classes, nPerm = 100, verbose = FALSE) 

T-statistics:
    Min.  1st Qu.   Median     Mean  3rd Qu.     Max. 
-3.25711 -0.72072 -0.01096 -0.02219  0.66601  3.30242 

P-values:
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00396 0.25717 0.50326 0.49595 0.71980 0.99873 
> 
> tn <- TNoM(data, classes)
[1] "ordering..."
[1] "matrifying..."
[1] "lapplying..."
[1] "cumsuming..."
[1] "more matrifying..."
[1] "another apply..."
> summary(tn)
TNoM object with 1000 rows and 20 columns
Call: TNoM(data = data, classes = classes) 

Number of genes with maximum number of misclassifications:
  0   1   2   3   4   5   6   7   8   9  10 
  0   0   0   9  38 134 242 367 201   9   0 
> 
> sam <- Sam(data, classes)
1 . 2 . 3 . 4 . 5 . 6 . 7 . 8 . 9 . 10 . 11 . 12 . 13 . 14 . 15 . 16 . 17 . 18 . 19 . 20 . 21 . 22 . 23 . 24 . 25 . 26 . 27 . 28 . 29 . 30 . 31 . 32 . 33 . 34 . 35 . 36 . 37 . 38 . 39 . 40 . 41 . 42 . 43 . 44 . 45 . 46 . 47 . 48 . 49 . 50 . 51 . 52 . 53 . 54 . 55 . 56 . 57 . 58 . 59 . 60 . 61 . 62 . 63 . 64 . 65 . 66 . 67 . 68 . 69 . 70 . 71 . 72 . 73 . 74 . 75 . 76 . 77 . 78 . 79 . 80 . 81 . 82 . 83 . 84 . 85 . 86 . 87 . 88 . 89 . 90 . 91 . 92 . 93 . 94 . 95 . 96 . 97 . 98 . 99 . 100 . 
> summary(sam)
Using a cutoff of 1 , we called 999 genes significant with expected FDR = 0.997  ( 996 )
Warning message:
In min(object@observed[positive]) :
  no non-missing arguments to min; returning Inf
> 
> tgs <- TwoGroupStats(data, classes)
> summary(tgs)
first group:  10 second group: 10 
     mean1               mean2            overallMean             var1        
 Min.   :-1.066820   Min.   :-0.954547   Min.   :-0.794206   Min.   :0.09493  
 1st Qu.:-0.236997   1st Qu.:-0.210246   1st Qu.:-0.156798   1st Qu.:0.68727  
 Median :-0.006114   Median : 0.011374   Median :-0.015762   Median :0.92272  
 Mean   :-0.011047   Mean   :-0.002704   Mean   :-0.006876   Mean   :1.01419  
 3rd Qu.: 0.204623   3rd Qu.: 0.202182   3rd Qu.: 0.143322   3rd Qu.:1.27837  
 Max.   : 0.945447   Max.   : 1.019569   Max.   : 0.656275   Max.   :3.05482  
      var2           overallVar       pooledVar     
 Min.   :0.07301   Min.   :0.3366   Min.   :0.3217  
 1st Qu.:0.64692   1st Qu.:0.7691   1st Qu.:0.7532  
 Median :0.90129   Median :0.9683   Median :0.9726  
 Mean   :0.99857   Mean   :1.0045   Mean   :1.0064  
 3rd Qu.:1.27840   3rd Qu.:1.1985   3rd Qu.:1.2096  
 Max.   :2.86346   Max.   :2.0843   Max.   :2.1399  
> smoo <- SmoothTtest(tgs)
> summary(smoo)
Smooth T test of Group One versus Group Two 

 AverageLogIntensity    LogRatio         SmoothedTStatistic  FirstBadFlag   
 Min.   :-0.794206   Min.   :-1.457071   Min.   :-3.29366   Min.   :0.3163  
 1st Qu.:-0.156798   1st Qu.:-0.296676   1st Qu.:-0.68189   1st Qu.:0.8405  
 Median :-0.015762   Median : 0.006090   Median : 0.01380   Median :0.9790  
 Mean   :-0.006876   Mean   : 0.008343   Mean   : 0.01937   Mean   :1.0001  
 3rd Qu.: 0.143322   3rd Qu.: 0.317983   3rd Qu.: 0.72420   3rd Qu.:1.1483  
 Max.   : 0.656275   Max.   : 1.344550   Max.   : 3.05336   Max.   :1.7658  
 SecondBadFlag   
 Min.   :0.2750  
 1st Qu.:0.8278  
 Median :0.9777  
 Mean   :0.9989  
 3rd Qu.:1.1565  
 Max.   :1.7499  
> #plot(smoo@smooth.t.statistics, mtt@t.statistics)
> 
> proc.time()
   user  system elapsed 
   3.58    0.17    4.24 
