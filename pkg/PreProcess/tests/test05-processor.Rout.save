
R version 3.5.1 (2018-07-02) -- "Feather Spray"
Copyright (C) 2018 The R Foundation for Statistical Computing
Platform: x86_64-w64-mingw32/x64 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> # channel-test.ssc
> library(PreProcess)
Loading required package: oompaBase
> 
> RNGversion("3.5.3")
> set.seed(237554)
> # simulate a moderately realistic looking microarray
> nc <- 100
> nr <- 100
> v <- rexp(nc*nr, 1/1000)
> b <- rnorm(nc*nr, 80, 10)
> s <- sapply(v-b, max, 1)
> ct <- ChannelType('user', 'random', nc, nr,  'fake')
> subbed <- Channel(name='fraud', parent='', type=ct, vec=s)
> rm(ct, nc, nr, v, b, s)		# clean some stuff
> 
> # example of standard data processing
> nor <- process(subbed, PROC.GLOBAL.NORMALIZATION)
> thr <- process(nor, PROC.THRESHOLD, 25)
> processed <- process(thr, PROC.LOG.TRANSFORM, 2)
> 
> summary(processed)
log normalized fraud, a microarray channel object
Parent object: NA 
Microarray type: user random 
Labeled with: fake 
Design size: 100 by 100 
Design information object:  
History:
	 Channel(parent = "", name = "fraud", type = ct, vec = s) 
	 Global normalization (using object: PROC.GLOBAL.NORMALIZATION) with parameter = 0 
	 Truncated below (using object: PROC.THRESHOLD) with parameter = 25 
	 Log transformation (using object: PROC.LOG.TRANSFORM) with parameter = 2 

   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
  4.644   7.254   8.848   8.448   9.966  12.745 
> 
> par(mfrow=c(2,1))
> plot(processed)
> hist(processed)
> 
> par(mfrow=c(1,1))
> image(processed)
> 
> rm(nor, thr, subbed, processed)
> 
> proc.time()
   user  system elapsed 
   0.51    0.03    0.54 
